<?php

namespace Ach\PoManagerBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PoItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PoItemRepository extends EntityRepository
{

	public function findPoNum($poNum, $filterDate, $exact)
	{
		$query = $this->_em->createQuery('SELECT i FROM AchPoManagerBundle:PoItem i JOIN i.po p WHERE p.num like :num AND i.dueDate >= :earliest AND i.dueDate <= :latest');

	if($exact)
	{
		$query->setParameter('num', $poNum);
	}
	else
	{
		$query->setParameter('num', '%' . $poNum . '%');
	}

	$query->setParameter('earliest', $filterDate['earliest']);
	$query->setParameter('latest', $filterDate['latest']);

	return $query->getResult();
	}

	public function findPn($pn, $filterDate, $exact)
	{
		$query = $this->_em->createQuery('SELECT i FROM AchPoManagerBundle:PoItem i JOIN i.revision r JOIN r.product p WHERE p.pn like :pn AND i.dueDate >= :earliest AND i.dueDate <= :latest ORDER BY i.dueDate DESC');

	if($exact)
	{
		$query->setParameter('pn', $pn);
	}
	else
	{
		$query->setParameter('pn', '%' . $pn . '%');
	}

	$query->setParameter('earliest', $filterDate['earliest']);
	$query->setParameter('latest', $filterDate['latest']);

	return $query->getResult();
	}

	public function findCustPn($custPn, $filterDate, $exact)
	{
	$query = $this->_em->createQuery('SELECT i FROM AchPoManagerBundle:PoItem i JOIN i.revision r JOIN r.product p WHERE p.custPn like :custPn AND i.dueDate >= :earliest AND i.dueDate <= :latest ORDER BY i.dueDate DESC');

	if($exact)
	{
		$query->setParameter('custPn', $custPn);
	}
	else
	{
		$query->setParameter('custPn', '%' . $custPn . '%');
	}

	$query->setParameter('earliest', $filterDate['earliest']);
	$query->setParameter('latest', $filterDate['latest']);

	return $query->getResult();
	}

	public function findDescription($desc, $filterDate)
	{
	$query = $this->_em->createQuery('SELECT i FROM AchPoManagerBundle:PoItem i JOIN i.revision r JOIN r.product p WHERE p.description like :desc AND i.dueDate >= :earliest AND i.dueDate <= :latest');

	$query->setParameter('desc', '%' . $desc . '%');
	$query->setParameter('earliest', $filterDate['earliest']);
	$query->setParameter('latest', $filterDate['latest']);

	return $query->getResult();
	}

	public function findPoItemByProdManager($prodManagerId, $statusName = "%")
	{
		$query = $this->_em->createQuery('SELECT p FROM AchPoManagerBundle:PoItem p JOIN p.status s JOIN p.revision r JOIN r.product d JOIN d.prodManager c WHERE s.name like :statusName AND c.id = :prodManagerId ORDER BY p.dueDate');
		$query->setParameter('prodManagerId', $prodManagerId);
		$query->setParameter('statusName', $statusName);
		return $query->getResult();
	}

	public function findPoItemByStatusShippingManager($shippingManagerId, $statusName1 = "", $statusName2 = "")
	{
	$query = $this->_em->createQuery('SELECT p FROM AchPoManagerBundle:PoItem p JOIN p.status s JOIN p.revision r JOIN r.product d JOIN d.shippingManager a WHERE (s.name = :statusName1 OR s.name = :statusName2) AND a.id = :shippingManagerId ORDER BY p.dueDate');
	$query->setParameter('statusName1', $statusName1);
	$query->setParameter('statusName2', $statusName2);
	$query->setParameter('shippingManagerId', $shippingManagerId);
	return $query->getResult();
	}
	
	public function sumQtyPoNum($bpo)
	{
		$query = $this->_em->createQuery('SELECT sum(i.qty) as total FROM AchPoManagerBundle:PoItem i JOIN i.po p JOIN p.bpo b WHERE b.id = :bpoId');
		$query->setParameter('bpoId', $bpo->getId());
		return $query->getOneOrNullResult();
	}

	/*public function findPoItemByStatusBillingManager($statusId, $billingManagerId)
	{
	$query = $this->_em->createQuery('SELECT p FROM AchPoManagerBundle:PoItem p JOIN p.status s JOIN p.revision r JOIN r.product d JOIN d.billingManager a WHERE s.id = :statusId AND a.id = :billingManagerId');
	$query->setParameter('statusId', $statusId);
	$query->setParameter('billingManagerId', $billingManagerId);
	return $query->getResult();
	}*/

	public function findLatestPn($pn)
	{
		$query = $this->_em->createQuery('SELECT i FROM AchPoManagerBundle:PoItem i JOIN i.revision r JOIN r.product p WHERE p.pn like :pn ORDER BY i.dueDate DESC');
	$query->setMaxResults(1);
	$query->setParameter('pn', $pn);

	return $query->getOneOrNullResult();
	}

}
